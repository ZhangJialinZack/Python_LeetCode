24. Swap Nodes in Pairs
Given a linked list, swap every two adjacent nodes and return its head.

For example,
Given 1->2->3->4, you should return the list as 2->1->4->3.

Your algorithm should use only constant space. You may not modify the values in the list, only nodes itself can be changed.


Python代码：
class Solution(object):
    def swapPairs(self, head):
        """
        :type head: ListNode
        :rtype: ListNode
        """
        # 0个或者一个节点直接返回
        if head == None or head.next == None:
            return head
        
        # 添加一个头结点  指向head
        dummy = ListNode(0)
        dummy.next = head
        # p指针用来循环
        p = dummy
        # 两个两个递进
        while p.next and p.next.next:
            temp = p.next.next       # 先记录下第二个节点
            p.next.next = temp.next  # 第一个节点指向第三个节点
            temp.next = p.next       # 第二个节点指向第一个节点
            p.next = temp            # 当前节点指向第二个节点
            p = p.next.next          # 前进两个节点 继续循环swap
            
        return dummy.next
