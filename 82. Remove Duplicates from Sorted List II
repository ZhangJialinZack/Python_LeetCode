82. Remove Duplicates from Sorted List II
Given a sorted linked list, delete all nodes that have duplicate numbers, leaving only distinct numbers from the original list.

For example,
Given 1->2->3->3->4->4->5, return 1->2->5.
Given 1->1->1->2->3, return 2->3.


Python代码：
class Solution(object):
    def deleteDuplicates(self, head):
        """
        :type head: ListNode
        :rtype: ListNode
        """
        # 若链表长度小于2  直接返回head
        if not head or not head.next:
            return head
        # 设置临时头结点
        dummy=ListNode(0)  
        dummy.next=head  
        # pre用来链接目标节点
        pre=dummy  
        # cur 用来跟踪重复节点
        cur=dummy.next  
        # 开始遍历
        while cur:
            # 如果有和当前节点重复的节点 一直往后跑 直到找到最后一个与当前节点重复的节点
            while cur.next and cur.next.val == cur.val:
                cur = cur.next
            # 如果没发现重复节点 直接串起来
            if pre.next == cur:
                pre = pre.next
            # 否则继续跟踪 如果一直都重复 最终pre指向None
            else:
                pre.next = cur.next
            cur = cur.next
          
        return dummy.next
